plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.cbastian.apicat'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor

        all*.exclude module : 'slf4j-simple'
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Projects
    implementation project(':resources-domain')

    // Spring Boot & Cloud starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


    // Security
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-oauth2-core:5.5.1'
    //implementation 'org.springframework.security.oauth:spring-security-oauth2:2.3.5.RELEASE'
    implementation 'org.springframework.security:spring-security-web'
    runtimeOnly 'com.nimbusds:oauth2-oidc-sdk:10.9.1'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.5.1'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:0.2.2'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Resilience
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'

    //Javax Validation
    implementation 'javax.validation:validation-api:2.0.1.Final'
    //Passwords validation
    implementation 'org.passay:passay:1.6.1'

    // Spring DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Swagger SpringFox
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation('io.springfox:springfox-swagger2:2.9.2') {
        exclude module: 'mapstruct'
    }

    // Testing libs
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    testImplementation 'org.slf4j:slf4j-api:1.7.25'

    // Others... Avoid insert libs here...
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    //DB
    //implementation group: 'com.oracle.database.jdbc', name: 'ojdbc11', version: '21.5.0.0'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'


}

test {
    useJUnitPlatform()
}
